# Use new container infrastructure to enable caching
sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.stack
  - $HOME/.stack-work

# Ensure necessary system libraries are present
addons:
  apt:
    packages:
      - libgmp-dev

# Test a LTS and nightly resolver
env:
  global:
    - GLOBAL_ARGS=--no-terminal --install-ghc
  matrix:
    - MATRIX_ARGS=--resolver=lts-9.21 DEPLOYABLE=true # pinned LTS for relases
    - MATRIX_ARGS=--resolver=lts-9
    - MATRIX_ARGS=--resolver=lts-11
    - MATRIX_ARGS=--resolver=nightly

# Allow nightly resolver and next version of LTS builds to fail
matrix:
  allow_failures:
    # lts-next
    - env: MATRIX_ARGS=--resolver=lts-9
    - env: MATRIX_ARGS=--resolver=lts-11
    - env: MATRIX_ARGS=--resolver=nightly

before_install:
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

install:
# Build dependencies
- stack $GLOBAL_ARGS $MATRIX_ARGS test --only-dependencies

script:
# Build the package, its tests, and its docs and run the tests
#- stack --no-terminal test --haddock --no-haddock-deps
- make check

before_deploy:
    - pip install --user awscli

deploy:
  on:
    condition: $DEPLOYABLE = true && false
    branch: master
  provider: s3
  access_key_id: $S3_ID
  secret_access_key: $S3_SECRET
  bucket: www.kyleondy.com
  region: us-east-1
  skip_cleanup: true
  local_dir: _site

after_deploy:
  - ~/.local/bin/aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION --paths '/*'<Paste>
